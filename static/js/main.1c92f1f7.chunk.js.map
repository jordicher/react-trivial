{"version":3,"sources":["components/TopTrivial.jsx","firebase.js","pages/TopTrivialPage.jsx","components/Score.jsx","components/Question.jsx","pages/TrivialPage.jsx","components/FormAuth.jsx","components/FormCategories.jsx","pages/AuthPage.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["TopTrivial","allUsers","className","map","user","firstName","lastName","country","time","correct","difficult","uuid","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","TopTrivialPage","finTrivial","auth","datesUser","history","useHistory","useState","setAllUsers","usersCategory","setUsersCategory","getAllUsers","a","docs","collection","orderBy","limit","get","forEach","doc","push","data","getUserCategory","where","category","addUserTop","id","set","useEffect","onClick","Score","incorrect","seconds","Question","question","indexQ","isCorrect","decodeHtml","html","txt","document","createElement","innerHTML","value","arrayAnswers","incorrect_answers","correct_answer","sort","classLi","answer","index","TrivialPage","setDatesUser","setFinTrivial","setCorrect","setIncorrect","setSeconds","arrayResponse","setArrayResponse","questions","setQuestions","e","parentId","target","parentNode","list","childNodes","includes","classList","add","slice","length","url","axios","result","results","setInterval","getRecipes","class","xmlns","fill","viewBox","cx","cy","r","stroke","stroke-width","d","FormAuth","setAuth","handleInputChange","name","onSubmit","preventDefault","trim","htmlFor","type","required","onChange","FormCategories","setCategory","trivia_categories","getCategory","defaultValue","AuthPage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c92f1f7.chunk.js","sourcesContent":["import React from 'react'\nimport uuid from 'react-uuid'\n\nconst TopTrivial = ({allUsers}) => {\n\n    return (\n        <div className=\"rounded-t-xl bg-gradient-to-r from-emerald-50 to-teal-100 p-5\">\n            <table className=\"table-auto mx-auto\">\n                <thead>\n                    <tr>\n                        <th className=\"px-4 py-2 text-green-600\">Name</th>\n                        <th className=\"px-4 py-2 text-green-600\">Country Region</th>\n                        <th className=\"px-4 py-2 text-green-600\">Time</th>\n                        <th className=\"px-4 py-2 text-green-600\">Correct</th>\n                        <th className=\"px-4 py-2 text-green-600\">Difficult</th>\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {allUsers.map(user =>\n                        <tr key={uuid()}>\n                            <td className=\"border border-green-500 px-4 py-2 text-green-600 font-medium\">{`${user.firstName} ${user.lastName}`}</td>\n                            <td className=\"border border-green-500 px-4 py-2 text-green-600 font-medium\">{user.country}</td>\n                            <td className=\"border border-green-500 px-4 py-2 text-green-600 font-medium\">{`${user.time}s`}</td>\n                            <td className=\"border border-green-500 px-4 py-2 text-green-600 font-medium\">{`${user.correct}`}</td>\n                            <td className=\"border border-green-500 px-4 py-2 text-green-600 font-medium\">{user.difficult}</td>\n                        </tr>\n                    )}\n\n\n\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TopTrivial\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC1s-Yi_ePnBG0eYCIqLnv71ZVNRK9EdUI\",\n  authDomain: \"trivialport.firebaseapp.com\",\n  projectId: \"trivialport\",\n  storageBucket: \"trivialport.appspot.com\",\n  messagingSenderId: \"519091971841\",\n  appId: \"1:519091971841:web:5f96fedeeeaa5439975d00\",\n};\n\nconst fb = firebase.initializeApp(firebaseConfig);\n\nexport const db = fb.firestore();\n","import React, { Fragment, useEffect, useState } from 'react'\nimport TopTrivial from '../components/TopTrivial';\nimport { db } from '../firebase'\nimport { useHistory } from \"react-router-dom\";\n\nconst TopTrivialPage = ({ finTrivial, auth, datesUser }) => {\n    let history = useHistory();\n\n    const [allUsers, setAllUsers] = useState();\n    const [usersCategory, setUsersCategory] = useState();\n\n    const getAllUsers = async () => {\n        const docs = [];\n        const querySnapshot = await db\n            .collection(\"usuarios\")\n            .orderBy(\"correct\", \"desc\")\n            .limit(20)\n            .get();\n        querySnapshot.forEach((doc) => {\n            docs.push(doc.data());\n        });\n        setAllUsers(docs);\n    }\n\n    const getUserCategory = async () => {\n        const docs = [];\n        const querySnapshot = await db\n            .collection(\"usuarios\")\n            .where('category', \"==\", datesUser.category)\n            .limit(10)\n            .get();\n        querySnapshot.forEach((doc) => {\n            docs.push(doc.data());\n        });\n        setUsersCategory(docs);\n    }\n\n    const addUserTop = async () => {\n        await db.collection('usuarios').doc(datesUser.id).set(datesUser);\n        getUserCategory();\n    }\n\n    useEffect(() => {\n        getAllUsers();\n\n        if (finTrivial && auth) {\n            addUserTop();\n        }\n    }, [])\n\n    return (\n        <div className=\"container mx-auto text-center\">   \n        <h1 className=\"text-4xl\">TOP</h1>\n            {usersCategory\n                ? <Fragment> \n                    <button className=\"bg-blue-400 text-white font-bold rounded p-4 my-2\" onClick={()=>history.push('/')}> Make another Trivial </button>\n                    <h1 className=\"text-2xl\">People who have played in this category</h1>\n                    <TopTrivial allUsers={usersCategory} />\n                </Fragment>\n\n                : null\n            }\n\n            <h2 className=\"mt-10 text-4xl\">Mundial TOP</h2>\n            {allUsers\n                ? <TopTrivial allUsers={allUsers} />\n                : null\n            }\n\n\n        </div>\n    )\n}\n\nexport default TopTrivialPage\n","import React from 'react';\n\n\nconst Score = ({ correct, incorrect, seconds}) => {    \n\n  \n\n    return (\n        <div className=\"flex justify-around\">\n            <div className=\"text-xl md:text-2xl\">Correct: <span className=\"text-green-500\">{correct}</span></div>\n            <div className=\"text-xl md:text-2xl\">Incorrect: <span className=\"text-red-500\">{incorrect}</span></div>\n            <div className=\"text-xl md:text-2xl\">Time: <span className=\"font-bold\">{seconds}s</span></div>\n        </div>\n    )\n}\n\nexport default Score","import React from 'react'\n\nconst Question = ({question, indexQ, isCorrect}) => {\n\n    function decodeHtml(html) {\n        var txt = document.createElement(\"textarea\");\n        txt.innerHTML = html;\n        return txt.value;\n    }\n \n    let arrayAnswers = [...question.incorrect_answers]\n    arrayAnswers.push(question.correct_answer);\n    arrayAnswers.sort();\n\n    const classLi = \"cursor-pointer border-4 border-blue-500 hover:border-blue-800 border-opacity-25 rounded\"\n\n\n    return (\n         <div className=\"bg-grey-100 rounded-xl shadow border w-full text-center my-4\">\n            <p className=\"text-lg my-2\">{decodeHtml(question.question)}</p>\n            <ul className=\"mx-2 grid grid-cols-1 md:grid-cols-2 gap-3 \" id={indexQ}>{arrayAnswers.map((answer, index) => {\n\n                if (question.correct_answer === answer) {\n                    return <li className={classLi} key={`${indexQ}co`} id={`${indexQ}co`} onClick={isCorrect}>{decodeHtml(answer)}</li>\n                } else {\n                    return <li className={classLi} key={`${indexQ}${index}in`} id={`${indexQ}${index}in`} onClick={isCorrect}>{decodeHtml(answer)}</li>\n                }\n            })}\n            </ul>\n            <br />\n        </div>\n    )\n}\n\nexport default Question\n\n\n/* (10) […]\n​\ncategory: \"Entertainment: Television\"\n​​\ncorrect_answer: \"12\"\n​​\ndifficulty: \"medium\"\n​​\nincorrect_answers: Array(3) [ \"11\", \"13\", \"15\" ]\n​​\nquestion: \"In the Doctor Who universe, how many times can a time lord normally regenerate?\"\n​​\ntype: \"multiple\"\n */\n\n\n","import React, { useState, useEffect, Fragment } from 'react'\nimport Score from '../components/Score';\nimport axios from 'axios'\nimport Question from '../components/Question';\nimport { useHistory } from \"react-router-dom\";\n\nconst TrivialPage = ({ auth, setDatesUser, datesUser, setFinTrivial }) => {\n\n    let history = useHistory();\n    const [correct, setCorrect] = useState(0)\n    const [incorrect, setIncorrect] = useState(0)\n    const [seconds, setSeconds] = useState(0);\n\n    const [arrayResponse, setArrayResponse] = useState([]);\n    const [questions, setQuestions] = useState([]);\n\n    const isCorrect = (e) => {\n        let parentId = e.target.parentNode.id;\n\n        let list = e.target.parentNode.childNodes\n\n        if (arrayResponse.includes(parentId)) {\n            return;\n        };\n\n        for (const answer of list) {\n            e.target.classList.add('bg-red-400');\n            if (answer.id === `${parentId}co`) {\n                answer.classList.add('bg-green-400');\n                break;\n            }\n        }\n\n        if (e.target.id.slice(-1) === 'n') {\n            setIncorrect(incorrect + 1);\n\n        } else {\n            setCorrect(correct + 1);\n        }\n\n        setArrayResponse([...arrayResponse, parentId]);\n\n        if (arrayResponse.length === 9) {\n            setDatesUser(\n                {\n                    ...datesUser,\n                    correct: correct,\n                    time: seconds\n                }\n            )\n\n            setCorrect(0);\n            setIncorrect(0);\n            setSeconds(0);\n            setFinTrivial(true);\n            history.push('/top');\n            /* Fin trivial */\n        }\n    }\n\n\n    useEffect(() => {\n\n        if (!auth) {\n            history.push('/');\n        }\n\n        const getRecipes = async () => {\n            const url = `https://opentdb.com/api.php?amount=10&category=${datesUser.category}&difficulty=${datesUser.difficult}`;\n            const result = await axios.get(url);\n            setQuestions(result.data.results);\n\n            setArrayResponse([]);\n            setCorrect(0);\n            setIncorrect(0);\n            setSeconds(0);\n\n            setInterval(() => {\n                setSeconds(seconds => seconds + 1);\n            }, 1000);\n        }\n        getRecipes();\n    }, [])\n\n    return (\n        <div>\n\n            {questions\n                ?\n                <Fragment>\n                    <Score correct={correct} incorrect={incorrect} seconds={seconds} />\n                    {questions.map((question, index) => <Question key={index} question={question} indexQ={index} isCorrect={isCorrect} />)}\n\n                </Fragment>\n                :\n                <Fragment>\n\n                    <div class=\"container mx-auto w-full mt-3\">\n                        <svg class=\"animate-spin h-1/2 w-1/2 text-blue-600 mx-auto\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n\n                    </div>\n\n                </Fragment>\n            }\n\n\n        </div>\n    )\n}\n\nexport default TrivialPage\n","import React, { Fragment } from 'react'\n\n\nconst FormAuth = ({ datesUser, setDatesUser, setAuth }) => {\n\n    const handleInputChange = e => {\n        setDatesUser({\n            ...datesUser,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const sendForm = (e) => {\n        e.preventDefault();\n\n        if (datesUser.firstName.trim() === '' || datesUser.lastName.trim() === '' || datesUser.country.trim() === '') return;        \n\n        setAuth(true)\n    }\n\n    return (\n\n\n        <Fragment>\n\n            <div className=\"flex flex-col\">\n                <div className=\"grid place-items-center mx-2 my-20 \">\n                    <div className=\"w-11/12 p-12 sm:w-8/12 md:w-6/12 lg:w-5/12 2xl:w-4/12 \n    px-6 py-10 sm:px-10 sm:py-6 \n    bg-white rounded-lg shadow-md lg:shadow-lg\">\n\n                        <h2 className=\"text-center font-semibold text-3xl lg:text-4xl text-gray-800\">\n                            Login\n                 </h2>\n\n                        <form className=\"mt-10\" onSubmit={sendForm}>\n\n                            <label htmlFor=\"firstName\" className=\"block text-xs font-semibold text-gray-600 uppercase\">First Name</label>\n                            <input id=\"text\" type=\"text\" name=\"firstName\"\n                                className=\"block w-full py-3 px-1 mt-2 \n            text-gray-800 appearance-none \n            border-2 border-gray-200\n            focus:text-gray-500 focus:outline-none focus:border-gray-400\"\n                                required\n                                onChange={handleInputChange} />\n\n\n                            <label htmlFor=\"lastName\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Last Name</label>\n                            <input id=\"text\" type=\"text\" name=\"lastName\"\n                                className=\"block w-full py-3 px-1 mt-2 mb-4\n            text-gray-800 appearance-none \n            border-2 border-gray-200\n            focus:text-gray-500 focus:outline-none focus:border-gray-400\"\n                                required\n                                onChange={handleInputChange} />\n\n\n                            <div className=\"col-span-2\">\n                                <label htmlFor=\"country\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Country / Region</label>\n                                <select id=\"country\" name=\"country\" className=\"block w-full py-3 px-1 mt-2 mb-4\n            text-gray-800 \n            border-2 border-gray-200\n            focus:text-gray-500 focus:outline-none focus:border-gray-400\" onChange={handleInputChange}>\n                                    <option value=''>Select Option</option>\n                                    <option value=\"Central America\" >Central America</option>\n                                    <option value=\"Europe\" >Europe</option>\n                                    <option value=\"North America\" >North America</option>\n                                    <option value=\"South America\" >South America</option>\n                                </select>\n                            </div>\n\n                            <button type=\"submit\"\n                                className=\"w-full py-3 mt-10 bg-gray-800 rounded-sm\n            font-medium text-white uppercase\n            focus:outline-none hover:bg-gray-700 hover:shadow-none\">\n                                Go to the trivial\n                    </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n\n    )\n}\n\nexport default FormAuth\n","import React, { Fragment, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\nimport uuid from 'react-uuid'\n\nconst FormCategories = ({ setDatesUser, datesUser }) => {\n    let history = useHistory();\n    const handleInputChange = e => {\n        setDatesUser({\n            ...datesUser,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const [category, setCategory] = useState([]);\n\n    const sendForm = (e) => {\n        e.preventDefault();\n        setDatesUser({\n            ...datesUser,\n            id: uuid()\n        })\n        \n        history.push(`/trivial`);\n    }\n\n    useEffect(() => {\n        const getCategory = async () => {\n            const url = 'https://opentdb.com/api_category.php'\n            const result = await axios.get(url);\n            setCategory(result.data.trivia_categories);\n        }\n\n        getCategory();\n    }, [])\n\n    return (\n        <Fragment>\n\n            <div className=\"flex flex-col\">\n                <div className=\"grid place-items-center mx-2 my-20 \">\n                    <div className=\"w-11/12 p-12 sm:w-8/12 md:w-6/12 lg:w-5/12 2xl:w-4/12 \npx-6 py-10 sm:px-10 sm:py-6 \nbg-white rounded-lg shadow-md lg:shadow-lg\">\n\n                        <h2 className=\"text-center font-semibold text-3xl lg:text-4xl text-gray-800\">\n                            Personalize your trivial\n             </h2>\n\n                        <form className=\"mt-10\" onSubmit={sendForm}>\n\n                            <div className=\"col-span-2\">\n                                <label htmlFor=\"category\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\"> Select Category: </label>\n                                <select name=\"category\" className=\"block w-full py-3 px-1 mt-2 mb-4\n        text-gray-800 \n        border-2 border-gray-200\n        focus:text-gray-500 focus:outline-none focus:border-gray-400\" onChange={handleInputChange}>\n                                    <option value=''>Any Category</option>\n                                    {!category\n                                        ?\n                                        <option>Wait Api</option>\n                                        :\n                                        category.map(category => (\n                                            <option key={category.id} value={category.id}>{category.name}</option>\n                                        ))\n                                    }\n                                </select>\n                            </div>\n\n\n                            <div className=\"col-span-2\">\n                                <label htmlFor=\"difficult\" className=\"block mt-2 text-xs font-semibold text-gray-600 uppercase\">Select Difficulty:</label>\n                                <select name=\"difficult\" className=\"block w-full py-3 px-1 mt-2 mb-4\n        text-gray-800 \n        border-2 border-gray-200\n        focus:text-gray-500 focus:outline-none focus:border-gray-400\" onChange={handleInputChange}>\n                                    <option value='' defaultValue>Any Difficult</option>\n                                    <option value=\"easy\">easy</option>\n                                    <option value=\"medium\">medium</option>\n                                    <option value=\"hard\">hard</option>\n                                </select>\n                            </div>\n\n                            <button type=\"submit\"\n                                className=\"w-full py-3 mt-10 bg-gray-800 rounded-sm\n        font-medium text-white uppercase\n        focus:outline-none hover:bg-gray-700 hover:shadow-none\">\n                                Start!\n                </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n\n    )\n}\n\nexport default FormCategories\n","import React from 'react'\nimport FormAuth from '../components/FormAuth'\nimport FormCategories from '../components/FormCategories'\n\nconst AuthPage = ({ auth, setAuth, setDatesUser, datesUser }) => {\n\n  \n    \n\n    return (\n        <div className=\"h-screen bg-gray-100\">\n\n            {!auth\n                ?\n                <FormAuth datesUser={datesUser} setDatesUser={setDatesUser} setAuth={setAuth} />\n                :\n                <FormCategories datesUser={datesUser} setDatesUser={setDatesUser} />}\n\n        </div>\n    )\n}\n\nexport default AuthPage\n","import React, { useState } from 'react'\n\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport TopTrivialPage from './pages/TopTrivialPage';\nimport TrivialPage from './pages/TrivialPage';\nimport AuthPage from './pages/AuthPage';\n\nfunction App() {\n\n  const [datesUser, setDatesUser] = useState({\n    firstName: '',\n    lastName: '',\n    country: '',\n    id: '',\n    time: 0,\n    category: '',\n    difficult: '',\n    correct: 0\n\n  })\n\n  const [auth, setAuth] = useState(false);\n  const [finTrivial, setFinTrivial] = useState(false);\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/top\">\n          <TopTrivialPage finTrivial={finTrivial} datesUser={datesUser} auth={auth} setFinTrivial={setFinTrivial}/>\n        </Route>\n\n        <Route path=\"/trivial\">\n          <TrivialPage auth={auth} setDatesUser={setDatesUser} datesUser={datesUser} setFinTrivial={setFinTrivial}/>\n        </Route>\n\n        <Route path=\"/\">\n          <AuthPage setDatesUser={setDatesUser} datesUser={datesUser} auth={auth} setAuth={setAuth} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}